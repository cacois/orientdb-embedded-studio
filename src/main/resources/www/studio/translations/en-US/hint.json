{
    "login.newDb": "Create a new database",
    "login.importDb": "Import a public database",
    "login.deleteDb": "Drop the selected database",
    "login.connectDb": "Connect to the selected database",
    "login.help": "To login, enter the credentials for any database user. By default, <b>reader/reader</b> can read records from the database, <b>writer/writer</b> can read, create, update and delete records. <b>admin/admin</b> has full administrative rights. To learn more about security, read the docs <a href='{{link}}' target='_blank'>here</a>",
    "browse.help": "Query help",
    "browse.clearHistory": "Clear history",
    "browse.searchHistory": "Search in history",
    "browse.run": "Run query",
    "browse.config": "Query help",
    "browse.addBookmark": "Add bookmark",
    "browse.showBookmark": "Toggle bookmarks",
    "schema.clusterSelection": "<ul class='clusterSelection'><li><strong>default</strong>, always uses the Class's <code>defaultClusterId</code> property. This was the default before version 1.7</li><li><strong>round-robin</strong>, puts the Class's configured clusters in a ring and returns a different cluster every time restarting at the first when the ring is completed</li><li><strong>balanced</strong>, checks the records in all the clusters and returns the smaller cluster. This allows the cluster to have all the underlying clusters balanced on size.</li></ul> For more details, visit the <a href='{{linkClusterSelection}}' target='_blank'>docs</a>",
    "schema.clusters": "A cluster is a place where a group of records are stored. Perhaps the best equivalent in the relational world would be a Table. By default, OrientDB will create one cluster per class. All the records of a class are stored in the same cluster which has the same name as the class. For more details, visit the <a href='{{linkClusters}}' target='_blank'>docs</a>",
    "class.clusters": "By default, OrientDB will create one cluster per class. All the records of a class are stored in the same cluster which has the same name as the class. For more details, visit the <a href='{{linkClusters}}' target='_blank'>docs</a>",
    "schema.class": "A Class is a concept taken from the Object Oriented paradigm. In OrientDB defines a type of record. It's the closest concept to a Relational DBMS Table. Class can be schema-less, schema-full or mixed. For more details about classes visit the <a href='{{linkClasses}}' target='_blank'>docs</a>",
    "schema.superClass": "OrientDB supports inheritance between classes. For more details about inheritance, visit the <a href='{{linkInheritance}}' target='_blank'>docs</a>",
    "structure.conflictStrategy": "Used to handle conflicts when OrientDB's Multi Version Concurrency Control (MVCC) finds an update or delete operation executed against an old record. For more details about conflict strategy, visit the <a href='{{linkConflictStrategy}}' target='_blank'>docs</a>",
    "configuration.conflictStrategy": "Used to handle conflicts when OrientDB's Multi Version Concurrency Control (MVCC) finds an update or delete operation executed against an old record. For more details about conflict strategy, visit the <a href='{{conflictStrategy}}' target='_blank'>docs</a>",
    "configuration.clusterSelection": "Sets the default strategy used when selecting the cluster where new records are created. This setting is read on class creation. After creation, each class has it's own modifiable strategy. For more details about cluster selection, visit the <a href='{{clusterSelection}}' target='_blank'>docs</a>",
    "configuration.minimumClusters": "Sets the minimum number of clusters to create automatically when a new class is created. The default is 1, but for multi CPU/core configurations having multiple clusters/files, putting the core number here improves read/write performance",
    "configuration.useLightweightEdges": "Starting from OrientDB v1.4.x, edges are managed as lightweight edges by default: they don't have their own identities stored as a record, but are physically stored as links inside vertices. OrientDB automatically uses Lightweight edges only when edges have no properties, otherwise regular edges are used. For more details about lightweight edges, visit the <a href='{{useLightweightEdges}}' target='_blank'>docs</a>",
    "class.property": "Properties are the class fields. For more details about properties and supported types, visit the <a href='{{properties}}' target='_blank'>docs</a>",
    "class.indexes": "Indexes are used to speed up searches. For more details about indexes and supported types, visit the <a href='{{indexes}}' target='_blank'>docs</a>",
    "security.permissions": "Resources are strings bound to OrientDB concepts. Note: resources are case sensitive. For more details about resource permissions, visit the <a href='{{resources}}' target='_blank'>docs</a>",
    "security.roles": "A role specifies the assigned permissions (ie. whether or not the user is allowed to execute an operation against a resource). These permissions depend on the working mode (i.e 'allow all, except' or 'deny all, except') and the rules. Rules work differently, but are based on the working mode. For more details about roles, visit the <a href='{{roles}}' target='_blank'>docs</a>",
    "security.users": "A user interacts with the database. To access a database, you need to specify the username and password for the user. Each user has it's own credentials and permissions. For more details about users, visit the <a href='{{users}}' target='_blank'>docs</a>",
    "index.type": "Supported type are : <br> <ul class='indexType'><li><strong>UNIQUE</strong></li><li><strong>NOTUNIQUE</strong></li><li><strong>FULLTEXT</strong></li><li><strong>DICTIONARY</strong></li><li><strong>UNIQUE_HASH_INDEX</strong></li><li><strong>NOTUNIQUE_HASH_INDEX</strong></li><li><strong>NOTUNIQUE_HASH_INDEX</strong></li><li><strong>DICTIONARY_HASH_INDEX</strong></li></ul> For more details about index types, visit the <a href='{{type}}' target='_blank'>docs</a>",
    "index.engine": "Supported engines are : <br> <ul class='indexType'><li><strong>SBTREE</strong></li><li><strong>HASHINDEX</strong></li><li><strong>LUCENE</strong></li></ul> For more details about supported engines, visit the <a href='{{engine}} target='_blank''>docs</a>"

}
